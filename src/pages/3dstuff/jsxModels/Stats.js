/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { a,useSpring } from "@react-spring/three";





export default function Model({ ...props }) {
  
  const group = useRef()
  const { nodes, materials } = useGLTF('../../../../stats.glb')


  const handleOpen = () => {
    props.setHover(!props.hover);
  }
  
  const rotationAnimation  = useSpring({
    scale: props.hover ? [0.32, 0.95, 0.32] : [0.32, 0.75, 0.32],
     
  });

  const rotationAnimation2  = useSpring({
    scale: props.hover ? [0.32, 0.85, 0.32] : [0.32, 0.75, 0.32],
     
  });
 
 
  return (

    <a.group ref={group} {...props} dispose={null}  onPointerOver={e => handleOpen(false)}
    onPointerOut={e => handleOpen(true)}>
  

      <a.mesh geometry={nodes.Cube001.geometry} material={materials['Material.004']} position={[1.22, 0.2, 0.27]} scale={rotationAnimation2.scale}  />
      <a.mesh geometry={nodes.Cube002.geometry} material={materials['Material.007']} position={[0.36, 0.2, 0.27]} scale={rotationAnimation.scale} />
      <a.mesh geometry={nodes.Cube003.geometry} material={materials['Material.010']} position={[-0.49, 0.2, 0.27]} scale={rotationAnimation2.scale} />
      <a.mesh geometry={nodes.Cube005.geometry} material={materials['Material.004']} position={[-1.29, 0.2, 0.27]} scale={rotationAnimation2.scale}  />
 
    </a.group>

  )
}

useGLTF.preload('../../../../stats.glb')
