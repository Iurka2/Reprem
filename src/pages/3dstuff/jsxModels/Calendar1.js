/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { a,useSpring } from "@react-spring/three";

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('../../../../calendar1.glb')
 
 
  const handleOpen = () => {
    props.setHover(!props.hover);
  }
  
  const rotationAnimation  = useSpring({
    rotation: props.hover ? [0,5.3,0] : [0,5,0],

  });

 
  return (
 
    <a.group ref={group}  {...props} dispose={null} position={[1,-0.6,0]} 
    rotation={rotationAnimation.rotation} 
    onPointerEnter={(e) => handleOpen(false)}
    onPointerLeave={(e) => handleOpen(true)} >

   
      <mesh geometry={nodes.Cube.geometry} material={materials.nnote} position={[0, 0.9, 0]} scale={[-0.05, 0.57, 0.57]} />
      <mesh geometry={nodes.Torus.geometry} material={materials.Ring} position={[0, 1.46, -0.3]} rotation={[Math.PI / 2, 0, 0]} scale={0.1} />
      <mesh geometry={nodes.Torus001.geometry} material={materials.Ring} position={[0, 1.45, 0]} rotation={[Math.PI / 2, 0, 0]} scale={0.1} />
      <mesh geometry={nodes.Torus002.geometry} material={materials.Ring} position={[0, 1.46, 0.29]} rotation={[Math.PI / 2, 0, 0]} scale={0.1} />
      <mesh geometry={nodes.Plane.geometry} material={materials.paper} position={[0.06, 0.86, 0.01]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[0.43, 0.52, 0.44]} />
      <mesh geometry={nodes.Plane001.geometry} material={materials.paper} position={[0.07, 0.86, 0.01]} rotation={[Math.PI / 2, 0.02, -Math.PI / 2]} scale={[0.43, 0.52, 0.44]} />
      <mesh geometry={nodes.Plane002.geometry} material={materials.paper} position={[0.09, 0.85, 0.01]} rotation={[1.57, 0.02, -1.58]} scale={[0.43, 0.52, 0.44]} />
      

    </a.group>

  )
}

useGLTF.preload('../../../../calendar1.glb')
